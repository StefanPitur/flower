# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flwr.proto import fleet_pb2 as flwr_dot_proto_dot_fleet__pb2
from flwr.proto import minio_pb2 as flwr_dot_proto_dot_minio__pb2


class FleetStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateNode = channel.unary_stream(
                '/flwr.proto.Fleet/CreateNode',
                request_serializer=flwr_dot_proto_dot_fleet__pb2.CreateNodeRequest.SerializeToString,
                response_deserializer=flwr_dot_proto_dot_fleet__pb2.CreateNodeResponseBatch.FromString,
                )
        self.CreateNodeMinIO = channel.unary_unary(
                '/flwr.proto.Fleet/CreateNodeMinIO',
                request_serializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.SerializeToString,
                response_deserializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.FromString,
                )
        self.DeleteNode = channel.stream_unary(
                '/flwr.proto.Fleet/DeleteNode',
                request_serializer=flwr_dot_proto_dot_fleet__pb2.DeleteNodeRequest.SerializeToString,
                response_deserializer=flwr_dot_proto_dot_fleet__pb2.DeleteNodeResponse.FromString,
                )
        self.DeleteNodeMinIO = channel.unary_unary(
                '/flwr.proto.Fleet/DeleteNodeMinIO',
                request_serializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.SerializeToString,
                response_deserializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.FromString,
                )
        self.PullTaskIns = channel.stream_stream(
                '/flwr.proto.Fleet/PullTaskIns',
                request_serializer=flwr_dot_proto_dot_fleet__pb2.PullTaskInsRequestBatch.SerializeToString,
                response_deserializer=flwr_dot_proto_dot_fleet__pb2.PullTaskInsResponseBatch.FromString,
                )
        self.PullTaskInsMinIO = channel.unary_unary(
                '/flwr.proto.Fleet/PullTaskInsMinIO',
                request_serializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.SerializeToString,
                response_deserializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.FromString,
                )
        self.PushTaskRes = channel.stream_stream(
                '/flwr.proto.Fleet/PushTaskRes',
                request_serializer=flwr_dot_proto_dot_fleet__pb2.PushTaskResRequestBatch.SerializeToString,
                response_deserializer=flwr_dot_proto_dot_fleet__pb2.PushTaskResResponseBatch.FromString,
                )
        self.PushTaskResMinIO = channel.unary_unary(
                '/flwr.proto.Fleet/PushTaskResMinIO',
                request_serializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.SerializeToString,
                response_deserializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.FromString,
                )


class FleetServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNodeMinIO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteNode(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteNodeMinIO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullTaskIns(self, request_iterator, context):
        """Retrieve one or more tasks, if possible

        HTTP API path: /api/v1/fleet/pull-task-ins
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullTaskInsMinIO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushTaskRes(self, request_iterator, context):
        """Complete one or more tasks, if possible

        HTTP API path: /api/v1/fleet/push-task-res
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushTaskResMinIO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FleetServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateNode': grpc.unary_stream_rpc_method_handler(
                    servicer.CreateNode,
                    request_deserializer=flwr_dot_proto_dot_fleet__pb2.CreateNodeRequest.FromString,
                    response_serializer=flwr_dot_proto_dot_fleet__pb2.CreateNodeResponseBatch.SerializeToString,
            ),
            'CreateNodeMinIO': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNodeMinIO,
                    request_deserializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.FromString,
                    response_serializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.SerializeToString,
            ),
            'DeleteNode': grpc.stream_unary_rpc_method_handler(
                    servicer.DeleteNode,
                    request_deserializer=flwr_dot_proto_dot_fleet__pb2.DeleteNodeRequest.FromString,
                    response_serializer=flwr_dot_proto_dot_fleet__pb2.DeleteNodeResponse.SerializeToString,
            ),
            'DeleteNodeMinIO': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteNodeMinIO,
                    request_deserializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.FromString,
                    response_serializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.SerializeToString,
            ),
            'PullTaskIns': grpc.stream_stream_rpc_method_handler(
                    servicer.PullTaskIns,
                    request_deserializer=flwr_dot_proto_dot_fleet__pb2.PullTaskInsRequestBatch.FromString,
                    response_serializer=flwr_dot_proto_dot_fleet__pb2.PullTaskInsResponseBatch.SerializeToString,
            ),
            'PullTaskInsMinIO': grpc.unary_unary_rpc_method_handler(
                    servicer.PullTaskInsMinIO,
                    request_deserializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.FromString,
                    response_serializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.SerializeToString,
            ),
            'PushTaskRes': grpc.stream_stream_rpc_method_handler(
                    servicer.PushTaskRes,
                    request_deserializer=flwr_dot_proto_dot_fleet__pb2.PushTaskResRequestBatch.FromString,
                    response_serializer=flwr_dot_proto_dot_fleet__pb2.PushTaskResResponseBatch.SerializeToString,
            ),
            'PushTaskResMinIO': grpc.unary_unary_rpc_method_handler(
                    servicer.PushTaskResMinIO,
                    request_deserializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.FromString,
                    response_serializer=flwr_dot_proto_dot_minio__pb2.MessageMinIO.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flwr.proto.Fleet', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Fleet(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/flwr.proto.Fleet/CreateNode',
            flwr_dot_proto_dot_fleet__pb2.CreateNodeRequest.SerializeToString,
            flwr_dot_proto_dot_fleet__pb2.CreateNodeResponseBatch.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNodeMinIO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flwr.proto.Fleet/CreateNodeMinIO',
            flwr_dot_proto_dot_minio__pb2.MessageMinIO.SerializeToString,
            flwr_dot_proto_dot_minio__pb2.MessageMinIO.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteNode(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/flwr.proto.Fleet/DeleteNode',
            flwr_dot_proto_dot_fleet__pb2.DeleteNodeRequest.SerializeToString,
            flwr_dot_proto_dot_fleet__pb2.DeleteNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteNodeMinIO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flwr.proto.Fleet/DeleteNodeMinIO',
            flwr_dot_proto_dot_minio__pb2.MessageMinIO.SerializeToString,
            flwr_dot_proto_dot_minio__pb2.MessageMinIO.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PullTaskIns(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/flwr.proto.Fleet/PullTaskIns',
            flwr_dot_proto_dot_fleet__pb2.PullTaskInsRequestBatch.SerializeToString,
            flwr_dot_proto_dot_fleet__pb2.PullTaskInsResponseBatch.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PullTaskInsMinIO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flwr.proto.Fleet/PullTaskInsMinIO',
            flwr_dot_proto_dot_minio__pb2.MessageMinIO.SerializeToString,
            flwr_dot_proto_dot_minio__pb2.MessageMinIO.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushTaskRes(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/flwr.proto.Fleet/PushTaskRes',
            flwr_dot_proto_dot_fleet__pb2.PushTaskResRequestBatch.SerializeToString,
            flwr_dot_proto_dot_fleet__pb2.PushTaskResResponseBatch.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushTaskResMinIO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flwr.proto.Fleet/PushTaskResMinIO',
            flwr_dot_proto_dot_minio__pb2.MessageMinIO.SerializeToString,
            flwr_dot_proto_dot_minio__pb2.MessageMinIO.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
